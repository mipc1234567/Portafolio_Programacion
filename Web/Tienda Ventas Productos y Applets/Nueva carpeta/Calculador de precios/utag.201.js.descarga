//~~tv:12034.20151130
//~~tc: Merge of E-Com Logic

window.lpTag = window.lpTag || {}; // REQUIRED to ensure lpTag {} exists prior to SDE push
lpTag.sdes = lpTag.sdes||[];
window.lpTag.autoStart = false; // REQUIRED ! disable autostart behaviour

function tealium_liveperson_lib(_site, _section) {
  if (({}).toString.call(_section).match(/\s([a-zA-Z]+)/)[1].toLowerCase() !== "array") {
    _section = _section ? _section.toString() : "";
    _section = _section.split(/\s*,\s*/g);
  }
// le-mtagconfig.js
  window.lpTag=window.lpTag||{};if(typeof window.lpTag._tagCount==='undefined'){window.lpTag={site:_site,section:_section,autoStart:lpTag.autoStart===false?false:true,ovr:lpTag.ovr||{},_v:'1.5.1',_tagCount:1,protocol:location.protocol,events:{bind:function(app,ev,fn){lpTag.defer(function(){lpTag.events.bind(app,ev,fn);},0);},trigger:function(app,ev,json){lpTag.defer(function(){lpTag.events.trigger(app,ev,json);},1);}},defer:function(fn,fnType){if(fnType==0){this._defB=this._defB||[];this._defB.push(fn);}else if(fnType==1){this._defT=this._defT||[];this._defT.push(fn);}else{this._defL=this._defL||[];this._defL.push(fn);}},load:function(src,chr,id){var t=this;setTimeout(function(){t._load(src,chr,id);},0);},_load:function(src,chr,id){var url=src;if(!src){url=this.protocol+'//'+((this.ovr&&this.ovr.domain)?this.ovr.domain:'lptag.liveperson.net')+'/tag/tag.js?site='+this.site;}var s=document.createElement('script');s.setAttribute('charset',chr?chr:'UTF-8');if(id){s.setAttribute('id',id);}s.setAttribute('src',url);document.getElementsByTagName('head').item(0).appendChild(s);},init:function(){this._timing=this._timing||{};this._timing.start=(new Date()).getTime();var that=this;if(window.attachEvent){window.attachEvent('onload',function(){that._domReady('domReady');});}else{window.addEventListener('DOMContentLoaded',function(){that._domReady('contReady');},false);window.addEventListener('load',function(){that._domReady('domReady');},false);}if(typeof(window._lptStop)=='undefined'){this.load();}},start:function(){this.autoStart=true;},_domReady:function(n){if(!this.isDom){this.isDom=true;this.events.trigger('LPT','DOM_READY',{t:n});}this._timing[n]=(new Date()).getTime();},vars:lpTag.vars||[],dbs:lpTag.dbs||[],ctn:lpTag.ctn||[],sdes:lpTag.sdes||[],ev:lpTag.ev||[]};lpTag.init();}else{window.lpTag._tagCount+=1;}
}

if ("true" === "false") {
  tealium_liveperson_lib("63090575", "");
}

//tealium universal tag - utag.sender.template ut4.0.201806282010, Copyright 2018 Tealium.com Inc. All Rights Reserved.
try {
  (function (id, loader) {
    var u = {};
    utag.o[loader].sender[id] = u;

    // Please do not modify
    if (utag.ut === undefined) { utag.ut = {}; }
    // Start Tealium loader 4.35
    if (utag.ut.loader === undefined) { u.loader = function (o) { var b, c, l, a = document; if (o.type === "iframe") { b = a.createElement("iframe"); o.attrs = o.attrs || { "height" : "1", "width" : "1", "style" : "display:none" }; for( l in utag.loader.GV(o.attrs) ){ b.setAttribute( l, o.attrs[l] ); } b.setAttribute("src", o.src); }else if (o.type=="img"){ utag.DB("Attach img: "+o.src); b=new Image();b.src=o.src; return; }else{ b = a.createElement("script");b.language="javascript";b.type="text/javascript";b.async=1;b.charset="utf-8"; for( l in utag.loader.GV(o.attrs) ){ b[l] = o.attrs[l]; } b.src = o.src; } if(o.id){b.id=o.id}; if (typeof o.cb=="function") { if(b.addEventListener) { b.addEventListener("load",function(){o.cb()},false); }else { /* old IE support */ b.onreadystatechange=function(){if(this.readyState=='complete'||this.readyState=='loaded'){this.onreadystatechange=null;o.cb()}}; } } l = o.loc || "head"; c = a.getElementsByTagName(l)[0]; if (c) { utag.DB("Attach to "+l+": "+o.src); if (l == "script") { c.parentNode.insertBefore(b, c); } else { c.appendChild(b) } } } } else { u.loader = utag.ut.loader; }
    // End Tealium loader
    // Start Tealium typeOf 4.35
    if (utag.ut.typeOf === undefined) { u.typeOf = function(e) {return ({}).toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase();};} else { u.typeOf = utag.ut.typeOf; }
    // End Tealium typeOf
    // Start Tealium isEmptyObject
    if (utag.ut.isEmptyObject === undefined) {u.isEmptyObject = function(o, a) { for (a in o) { if (utag.ut.hasOwn(o,a)){return false;}}return true;};} else { u.isEmptyObject = utag.ut.isEmptyObject; }
    // Start Tealium hasOwn - used in the above function
    if (utag.ut.hasOwn === undefined) {utag.ut.hasOwn = function(o, a) {return o != null  && Object.prototype.hasOwnProperty.call(o, a);};}
    // End Tealium hasOwn
    // End Tealium isEmptyObject
    // Start Tealium isEmptyObject
    if (utag.ut.merge === undefined) {u.merge = function(a, b, c, d) {if(c){for(d in utag.loader.GV(b)){a[d] = b[d];}}else{for(d in utag.loader.GV(b)){if(typeof a[d]=="undefined"){a[d] = b[d];}}}};} else { u.merge = utag.ut.merge; }
    // End Tealium isEmptyObject

    u.ev = {"view" : 1, "link" : 1};
    u.initialized = false;
    //INTERNAL FUNCTIONS
    u.calc_items = function(quan) {
      var q, i = 0;
      for (q = 0; q < quan.length; q++) {
        i += parseInt(quan[q]);
      }
      return i;
    };
    u.remove_empty = function(a) {
      var b, t;
      for (b in utag.loader.GV(a)) {
        t = u.typeOf(a[b]);
        if (t === "object") {
          u.remove_empty(a[b]);
          if (u.isEmptyObject(a[b])) {
            try {delete a[b];} catch(e) {a[b]=undefined;}
          }
        } else if (!((a[b] === 0 || a[b] === false) ? !0 : (t === "array" && a[b].length === 0) ? !1 : !!a[b])){
          try {delete a[b];} catch(e) {a[b]=undefined;}
        }
      }
      return a;
    };
    u.map_func = function(arr, obj, item) {
      var i = arr.shift();
      obj[i] = obj[i] || {};
      if (arr.length > 0) {
        u.map_func(arr,obj[i], item);
      } else {
        obj[i] = item;
      }
    };
    u.add_prod = function(ecom,f) {
      return {
        "name": ecom.product_name[f],
        "category": ecom.product_category[f],
        "sku": ecom.product_sku[f],
        "price": parseFloat(ecom.product_unit_price[f])
      }
    };
    u.contains_data = function(data) {
      var c, count = 0;
      for (c in data) {
        if (utag.ut.hasOwn(data,c)) {
          if (++count > 1) {
            return true;
          }
        }
      }
      return false;
    };
    //END INTERNAL FUNCTIONS
      u.map={"LivePersonSection":"section"};
  u.extend=[function(a,b){ try{ if((typeof b['meta.WT.site']!='undefined'&&typeof b['wt_use_udo']=='undefined')||(typeof b['meta.WT.site']!='undefined'&&b['wt_use_udo'].toString().toLowerCase()=='false'.toLowerCase())){b['page_site']=b['meta.WT.site']} } catch(e){ utag.DB(e) }  },
function(a,b){ try{ if((typeof b['meta.WT.z_lang']!='undefined'&&typeof b['wt_use_udo']=='undefined')||(typeof b['meta.WT.z_lang']!='undefined'&&b['wt_use_udo'].toString().toLowerCase()=='false'.toLowerCase())){b['page_language']=b['meta.WT.z_lang']} } catch(e){ utag.DB(e) }  },
function(a,b,c,d){ try{ if(1){c=[b['page_language'],b['page_site']];b['LivePersonSection']=c.join(';')} } catch(e){ utag.DB(e) }  }];


    u.send = function (a, b) {
      if (u.ev[a] || u.ev.all !== undefined) {
        //##UTENABLEDEBUG##utag.DB("send:##UTID##");

        var c, d, e, f, g, data, type, ecom;

        u.data = {
          "site" : "63090575",
          "section" : "",
          "type" : "mrktinfo",
          "merge_ecom" : "false",
          // E-Commerce Vars
          "product_name" : [],
          "product_sku" : [],
          "product_category" : [],
          "product_quantity" : [],
          "product_unit_price" : [],
          "vi" : {},
          "ms" : {},
          "per" : {},
          "lead" : {},
          "serv" : {},
          "err" : {},
          "ecom" : {},
          "ecom_blank" : {"order_id":"","order_total":"","product_name":[],"product_sku":[],"product_category":[],"product_quantity":[],"product_unit_price":[]}
        };

        // Start tag-scoped extensions
      for(c=0;c<u.extend.length;c++){try{d=u.extend[c](a,b);if(d==false)return}catch(e){}};
        // End tag-scoped extensions

        c = [];

        // Start Mapping
        for (d in utag.loader.GV(u.map)) {
          if (b[d] !== undefined && b[d] !== "") {
            e = u.map[d].split(",");
            for (f = 0; f < e.length; f++) {
              u.map_func(e[f].split("."), u.data, b[d]);
            }
          }
        }
        // End Mapping

        if ("true" === "true") {
          tealium_liveperson_lib(u.data.site, u.data.section);
        }

        // Pull E-Commerce extension values
        // Mappings override E-Commerce extension values
        u.data.customer_id = u.data.customer_id || b._ccustid || "";

        ecom = u.data.ecom;
        ecom.order_id = u.data.order_id || b._corder || "";
        ecom.order_total = u.data.order_total || b._ctotal || "";
        if (u.data.product_name.length === 0 && b._cprodname !== undefined) { ecom.product_name = b._cprodname.slice(0); } else {ecom.product_name = u.data.product_name.slice(0);}
        if (u.data.product_sku.length === 0 && b._csku !== undefined) { ecom.product_sku = b._csku.slice(0); } else {ecom.product_sku = u.data.product_sku.slice(0);}
        if (u.data.product_category.length === 0 && b._ccat !== undefined) { ecom.product_category = b._ccat.slice(0); } else {ecom.product_category = u.data.product_category.slice(0);}
        if (u.data.product_quantity.length === 0 && b._cquan !== undefined) { ecom.product_quantity = b._cquan.slice(0); } else {ecom.product_quantity = u.data.product_quantity.slice(0);}
        if (u.data.product_unit_price.length === 0 && b._cprice !== undefined) { ecom.product_unit_price = b._cprice.slice(0); } else {ecom.product_unit_price = u.data.product_unit_price.slice(0);}

        if(u.typeOf(u.data.type) !== "array") {
          u.data.type = u.data.type.split(/\s*,\s*/);
        }

        for (g = 0; g < u.data.type.length; g++) {
          data = undefined;
          type = u.data.type[g];
          //Commerce
          u.data[type] = u.data[type] || {};
          if (u.data.merge_ecom === "true") {
            u.merge(u.data[type], utag.handler.C(u.data.ecom));
          } else {
            u.merge(u.data[type], utag.handler.C(u.data.ecom_blank));
          }
          if (type === "cart") {
            ecom = u.data.cart;
            data = {
              "type": type,  //MANDATORY
              "total": parseFloat(ecom.order_total),  //TOTAL VALUE OF THE TRANSACTION AFTER DISCOUNT
              "orderId": ecom.order_id,  //UNIQUE ORDER ID OR RECEIPT ID
              "numItems": u.calc_items(ecom.product_quantity),
              "products": []
            };
            for (f = 0; f < ecom.product_name.length; f++) {
              data.products.push({
                "product": u.add_prod(ecom,f),
                "quantity": parseInt(ecom.product_quantity[f])
              });
            }
            if (data.products.length === 0) {
              try {delete data["numItems"];} catch(e) {data["numItems"]=undefined;}
            }
          } else if (type === "purchase") {
            ecom = u.data.purchase;
            data = {
              "type": type,  //MANDATORY
              "cart": {"products": []}
            };
            if (ecom.order_total) {data.total = parseFloat(ecom.order_total);}
            //UNIQUE ORDER ID OR RECEIPT ID
            if (ecom.order_id) {data.orderId = ecom.order_id;}
            for (f = 0; f < ecom.product_name.length; f++) {
              data.cart.products.push({
                "product": u.add_prod(ecom,f),
                "quantity": parseInt(ecom.product_quantity[f])
              });
            }
          } else if (type === "prodView") {
            ecom = u.data.prodView;
            data = {
              "type": type,
              "products": {"product": []}
            };
            for (f = 0; f < ecom.product_name.length; f++) {
              data.products.product.push(u.add_prod(ecom,f));
            }
          }
          //Visitor Info
          else if (type === "ctmrinfo") {
            data = {
              "type": type,
              "info": {
                "cstatus": u.data.vi.cstatus,
                "customerId" : u.data.customer_id,
                "ctype": u.data.vi.ctype,
                "balance": parseFloat(u.data.vi.balance),
                "lastPaymentDate": {
                  "day": parseInt(u.data.vi.lpd_day),
                  "month": parseInt(u.data.vi.lpd_month),
                  "year": parseInt(u.data.vi.lpd_year)
                },
                "registrationDate": {
                  "day": parseInt(u.data.vi.rd_day),
                  "month": parseInt(u.data.vi.rd_month),
                  "year": parseInt(u.data.vi.rd_year)
                }
              }
            };
          } else if (type === "mrktInfo") {
            data = {
              "type": type,
              "info": {
                "channel": u.data.ms.channel, // 0-Direct, 1-Search, 2-Social, 3-Email, 4-Referral, 5-Paid Search, 6-Display
                "affiliate": u.data.ms.affiliate,
                "campaignId": u.data.ms.campaignId
              }
            };
          } else if (type === "personal") {
            data = {
              "type": type,
              "personal": {
                "firstname": u.data.per.firstname,
                "lastname": u.data.per.lastname,
                "age": {
                  "age": parseInt(u.data.per.age),
                  "year": parseInt(u.data.per.year),
                  "month": parseInt(u.data.per.month),
                  "day": parseInt(u.data.per.day)
                },
                "contacts": [],
                "gender": u.data.per.gender,
                "company": u.data.per.company
              }
            };

            if (u.typeOf(u.data.per.email) !== "array") {
              u.data.per.email = [u.data.per.email];
            }
            if (u.typeOf(u.data.per.phone) !== "array") {
              u.data.per.phone = [u.data.per.phone];
            }
            for (f = 0; f < u.data.per.email.length; f++) {
              data.personal.contacts.push({
                "email": u.data.per.email[f],
                "phone": u.data.per.phone[f]
              });
            }
          } else if (type === "lead") {
            data = {
              "type": type,
              "lead": {
                "topic": u.data.lead.topic
              }
            };
            if (u.data.lead.value) {data.lead.value = parseFloat(u.data.lead.value);}
            if (u.data.lead.id) {data.lead.leadId = u.data.lead.id;}
          } else if (type === "service") {
            data = {
              "type": type,
              "service": {
                "topic": u.data.serv.topic,
                "status": parseInt(u.data.serv.status),
                "category": u.data.serv.category,
                "serviceId": u.data.serv.id
              }
            }
          } else if (type === "error") {
            data = {
              "type": type,
              "error": {
                "message": u.data.err.msg,
                "code": u.data.err.code
              }
            };
          }

          if (data) {
            u.remove_empty(data);
            if (u.contains_data(data)) {
              lpTag.sdes.push(data);
            }
          }
        }

        if (!u.initialized) {
          u.initialized=!0;
          (function(){
            var firstTry = true,tryAgain;
            var _lpStopTrying = function () {clearInterval(tryAgain);};
            var startLETag = function() {if (lpTag.start){lpTag.isDom = true;lpTag.start(); _lpStopTrying(); } else if (firstTry) {firstTry = false;tryAgain = setInterval(startLETag,100);}};
            startLETag();
          })();
        }

        //##UTENABLEDEBUG##utag.DB("send:##UTID##:COMPLETE");
      }
    };
    utag.o[loader].loader.LOAD(id);
  }("201", "digikey.main"));
} catch (error) {
  utag.DB(error);
}
//end tealium universal tag